{
  "recentFiles": [
    {
      "basename": "README",
      "path": "README.md"
    },
    {
      "basename": "Unit test",
      "path": "Testing/Unit Test/Unit test.md"
    },
    {
      "basename": "Assertions",
      "path": "Testing/Assertions.md"
    },
    {
      "basename": "OpenCV-python",
      "path": "OpenCV/OpenCV-python.md"
    },
    {
      "basename": "First program with OpenCV",
      "path": "OpenCV/First program with OpenCV.md"
    },
    {
      "basename": "Read contours",
      "path": "OpenCV/Read contours.md"
    },
    {
      "basename": "COLOR_BGR2HSV",
      "path": "OpenCV/Функции OpenCV/COLOR_BGR2HSV.md"
    },
    {
      "basename": "COLOR_BGR2GRAY",
      "path": "OpenCV/Функции OpenCV/COLOR_BGR2GRAY.md"
    },
    {
      "basename": "COLOR_BGR2LAB",
      "path": "OpenCV/Функции OpenCV/COLOR_BGR2LAB.md"
    },
    {
      "basename": "cvtColor",
      "path": "OpenCV/Функции OpenCV/cvtColor.md"
    },
    {
      "basename": "HSVChangePicture",
      "path": "OpenCV/Функции OpenCV/HSVChangePicture.png"
    },
    {
      "basename": "image",
      "path": "OpenCV/Функции OpenCV/image.jpg"
    },
    {
      "basename": "resize",
      "path": "OpenCV/Функции OpenCV/resize.md"
    },
    {
      "basename": "Rotate",
      "path": "OpenCV/Функции OpenCV/Rotate.md"
    },
    {
      "basename": "set in CV",
      "path": "OpenCV/Функции OpenCV/set in CV.md"
    },
    {
      "basename": "Transform",
      "path": "OpenCV/Функции OpenCV/Transform.md"
    },
    {
      "basename": "assertEqual(a, b)",
      "path": "Testing/Unit Test/Unit test method/assertEqual(a, b).md"
    },
    {
      "basename": "assertFalse (x)",
      "path": "Testing/Unit Test/Unit test method/assertFalse (x).md"
    },
    {
      "basename": "assertIn (a, b)",
      "path": "Testing/Unit Test/Unit test method/assertIn (a, b).md"
    },
    {
      "basename": "assertIs(a, b)",
      "path": "Testing/Unit Test/Unit test method/assertIs(a, b).md"
    },
    {
      "basename": "assertIsInstance(a, b)",
      "path": "Testing/Unit Test/Unit test method/assertIsInstance(a, b).md"
    },
    {
      "basename": "assertIsNot (a, b)",
      "path": "Testing/Unit Test/Unit test method/assertIsNot (a, b).md"
    },
    {
      "basename": "assertIsNotNone (x)",
      "path": "Testing/Unit Test/Unit test method/assertIsNotNone (x).md"
    },
    {
      "basename": "assertNotEqual(a, b)",
      "path": "Testing/Unit Test/Unit test method/assertNotEqual(a, b).md"
    },
    {
      "basename": "assertNotIn(a, b)",
      "path": "Testing/Unit Test/Unit test method/assertNotIn(a, b).md"
    },
    {
      "basename": "assertNotIsInstance(a, b)",
      "path": "Testing/Unit Test/Unit test method/assertNotIsInstance(a, b).md"
    },
    {
      "basename": "assertRaises",
      "path": "Testing/Unit Test/Unit test method/assertRaises.md"
    },
    {
      "basename": "assertTrue (x)",
      "path": "Testing/Unit Test/Unit test method/assertTrue (x).md"
    },
    {
      "basename": "blur",
      "path": "OpenCV/Функции OpenCV/blur.md"
    },
    {
      "basename": "Start from Base",
      "path": "Base/Start from Base.md"
    },
    {
      "basename": "Бинарный поиск",
      "path": "Algorithms/Бинарный поиск.md"
    },
    {
      "basename": "Pip",
      "path": "Base/Pip.md"
    },
    {
      "basename": "Import",
      "path": "Base/Import.md"
    },
    {
      "basename": "Def",
      "path": "Base/Def.md"
    },
    {
      "basename": "Type data in python",
      "path": "Base/Type data in python/Type data in python.md"
    },
    {
      "basename": "Given the triangle of consecutive odd numbers",
      "path": "Tasks from code vars/Given the triangle of consecutive odd numbers.md"
    },
    {
      "basename": "Floating point (float)",
      "path": "Base/Type data in python/Floating point (float).md"
    },
    {
      "basename": "Dictionary (dict)",
      "path": "Base/Type data in python/Dictionary (dict).md"
    },
    {
      "basename": "Boolean (bool)",
      "path": "Base/Type data in python/Boolean (bool).md"
    },
    {
      "basename": "Type data in python",
      "path": "Base/Type data in python/Type data in python.canvas"
    },
    {
      "basename": "English letter in binary system",
      "path": "Binary system/English letter in binary system.md"
    },
    {
      "basename": "Number in binary system",
      "path": "Binary system/Number in binary system.md"
    },
    {
      "basename": "assertIsNone (x)",
      "path": "Testing/Unit Test/Unit test method/assertIsNone (x).md"
    },
    {
      "basename": "Given the triangle of consecutive odd numbers",
      "path": "Задачи с CodeWars/Given the triangle of consecutive odd numbers.md"
    },
    {
      "basename": "Type data in python",
      "path": "База/Type data in python/Type data in python.md"
    },
    {
      "basename": "Type data in python",
      "path": "База/Type data in python/Type data in python.canvas"
    },
    {
      "basename": "Set (set)",
      "path": "База/Type data in python/Set (set).md"
    },
    {
      "basename": "Def",
      "path": "База/Def.md"
    },
    {
      "basename": "git add .",
      "path": "Git/Команды Git/git add ..md"
    },
    {
      "basename": "git add file_name",
      "path": "Git/Команды Git/git add file_name.md"
    }
  ],
  "omittedPaths": [],
  "maxLength": null,
  "openType": "tab"
}